{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SIdentify from './RandomCode.vue';\nexport default {\n  name: 'userlogin',\n  data: function data() {\n    var _this = this;\n\n    // 自定义验证规则：验证码验证规则\n    var validateVerifycode = function validateVerifycode(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入验证码'));\n      } else if (value !== _this.identifyCode) {\n        console.log('validateVerifycode:', value);\n        callback(new Error('验证码不正确'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      loginForm: {\n        verifycode: ''\n      },\n      identifyCodes: '1234567890',\n      identifyCode: '',\n      loginRules: {\n        verifycode: [{\n          required: true,\n          trigger: 'blur',\n          validator: validateVerifycode\n        }]\n      }\n    };\n  },\n  components: {\n    // 注册绘制随机验证码的组件\n    SIdentify: SIdentify\n  },\n  created: function created() {},\n  mounted: function mounted() {\n    // 验证码初始化\n    this.identifyCode = '';\n    this.makeCode(this.identifyCodes, 4);\n  },\n  computed: {},\n  methods: {\n    // 生成随机数\n    randomNum: function randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    },\n    // 切换验证码\n    refreshCode: function refreshCode() {\n      this.identifyCode = '';\n      this.makeCode(this.identifyCodes, 4);\n    },\n    // 生成四位随机验证码\n    makeCode: function makeCode(o, l) {\n      for (var i = 0; i < l; i++) {\n        this.identifyCode += this.identifyCodes[this.randomNum(0, this.identifyCodes.length)];\n      }\n\n      console.log(this.identifyCode);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;AACAA,mBADA;AAEAC,MAFA,kBAEA;AAAA;;AACA;AACA;AACA;AACAC;AACA,OAFA,MAEA;AACAC;AACAD;AACA,OAHA,MAGA;AACAA;AACA;AACA,KATA;;AAUA;AACAE;AACAC;AADA,OADA;AAIAC,iCAJA;AAKAC,sBALA;AAMAC;AACAH,qBACA;AAAAI;AAAAC;AAAAC;AAAA,SADA;AADA;AANA;AAYA,GA1BA;AA2BAC;AACA;AACAC;AAFA,GA3BA;AA+BAC,SA/BA,qBA+BA,EA/BA;AAgCAC,SAhCA,qBAgCA;AACA;AACA;AACA;AACA,GApCA;AAqCAC,cArCA;AAsCAC;AACA;AACAC,aAFA,qBAEAC,GAFA,EAEAC,GAFA,EAEA;AACA;AACA,KAJA;AAKA;AACAC,eANA,yBAMA;AACA;AACA;AACA,KATA;AAUA;AACAC,YAXA,oBAWAC,CAXA,EAWAC,CAXA,EAWA;AACA;AACA;AACA;;AACArB;AACA;AAhBA;AAtCA","names":["name","data","callback","console","loginForm","verifycode","identifyCodes","identifyCode","loginRules","required","trigger","validator","components","SIdentify","created","mounted","computed","methods","randomNum","min","max","refreshCode","makeCode","o","l"],"sourceRoot":"src/components","sources":["OnlineLogin.vue"],"sourcesContent":["<template>\r\n<div id=\"magicalDragScene\" class=\"mc-root mc-ui-absolute-pane\">\r\n    <el-card>\r\n\t<el-tabs value=\"first\" @tab-click=\"_tabClick\">\r\n        \r\n\t\t<el-tab-pane name=\"first\" label=\"选项1\">\r\n\t\t\t\t<el-input></el-input>\r\n\t\t\t\t<el-input></el-input>\r\n\t\t\t\t<el-link>文字链接</el-link>\r\n            <el-button type=\"primary\" @click=\"onSubmit\">立即创建</el-button>           \r\n             <el-button type=\"primary\" @click=\"onSubmit\">立即创建</el-button>\r\n\t\t\t\t<el-link>文字链接</el-link>\r\n\t\t\t\t<el-link>文字链接</el-link>\r\n\t\t</el-tab-pane>\r\n\t\t<el-tab-pane name=\"second\" label=\"选项2\">\r\n\t\t\t<el-input></el-input>\r\n                <div class=\"randomcodeuse\">\r\n                        <el-form class=\"login-form\" status-icon :rules=\"loginRules\" ref=\"loginForm\" :model=\"loginForm\" label-width=\"0\">\r\n                            <!-- 随机验证码 输入框 -->\r\n                            <el-form-item prop=\"verifycode\">\r\n                                <el-input v-model=\"loginForm.verifycode\" placeholder=\"请输入验证码\" class=\"identifyinput\"></el-input>\r\n                            </el-form-item>\r\n                            <!-- 随机验证码 -->\r\n                            <el-form-item>\r\n                                <div class=\"identifybox\">\r\n                                    <div @click=\"refreshCode\">\r\n                                        <s-identify :identifyCode=\"identifyCode\"></s-identify>\r\n                                    </div>\r\n                                    <!-- 刷新验证码 -->\r\n                                    <el-button @click=\"refreshCode\" type='text' class=\"textbtn\">看不清，换一张</el-button>\r\n                                </div>\r\n                            </el-form-item>\r\n                        </el-form>\r\n                    </div>\r\n\t\t\t<el-input></el-input>\r\n            <el-button type=\"primary\" @click=\"onSubmit\">立即创建</el-button>           \r\n             <el-button type=\"primary\" @click=\"onSubmit\">立即创建</el-button>\r\n\t\t\t<el-link>文字链接</el-link>\r\n\t\t\t<el-link>文字链接</el-link>\r\n\t\t</el-tab-pane>\r\n\t\t<el-tab-pane name=\"third\" label=\"选项3\"></el-tab-pane>\r\n\t</el-tabs>\r\n    </el-card>\r\n</div>\r\n</template>\r\n\r\n<style scoped>\r\n.el-card{\r\n    margin-left:57px;\r\n    margin-right:px;\r\n    width: 840px;\r\n    height: 466px;\r\n    margin-bottom: 20px;\r\n}\r\n</style>\r\n\r\n<script>\r\n\timport SIdentify from './RandomCode.vue'\r\n\texport default {\r\n\t\tname: 'userlogin',\r\n\t\tdata() {\r\n\t\t\t// 自定义验证规则：验证码验证规则\r\n\t\t\tconst validateVerifycode = (rule, value, callback) => {\r\n\t\t\t\tif (value === '') {\r\n\t\t\t\t\tcallback(new Error('请输入验证码'))\r\n\t\t\t\t} else if (value !== this.identifyCode) {\r\n\t\t\t\t\tconsole.log('validateVerifycode:', value)\r\n\t\t\t\t\tcallback(new Error('验证码不正确'))\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcallback()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tloginForm: {\r\n\t\t\t\t\tverifycode: ''\r\n\t\t\t\t},\r\n\t\t\t\tidentifyCodes: '1234567890',\r\n\t\t\t\tidentifyCode: '',\r\n\t\t\t\tloginRules: { \r\n\t\t\t\t\tverifycode: [\r\n\t\t\t\t\t\t{ required: true, trigger: 'blur', validator: validateVerifycode },\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomponents: {\r\n\t\t\t// 注册绘制随机验证码的组件\r\n\t\t\tSIdentify\r\n\t\t},\r\n\t\tcreated() {},\r\n\t\tmounted() {\r\n\t\t\t// 验证码初始化\r\n\t\t\tthis.identifyCode = ''\r\n\t\t\tthis.makeCode(this.identifyCodes, 4)\r\n\t\t},\r\n\t\tcomputed: {},\r\n\t\tmethods: {\r\n\t\t\t// 生成随机数\r\n\t\t\trandomNum(min, max) {\r\n\t\t\t\treturn Math.floor(Math.random() * (max - min) + min)\r\n\t\t\t},\r\n\t\t\t// 切换验证码\r\n\t\t\trefreshCode() {\r\n\t\t\t\tthis.identifyCode = ''\r\n\t\t\t\tthis.makeCode(this.identifyCodes, 4)\r\n\t\t\t},\r\n\t\t\t// 生成四位随机验证码\r\n\t\t\tmakeCode(o, l) {\r\n\t\t\t\tfor (let i = 0; i < l; i++) {\r\n\t\t\t\t\tthis.identifyCode += this.identifyCodes[this.randomNum(0, this.identifyCodes.length)]\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(this.identifyCode)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t.randomcodeuse{\r\n\t\twidth: 60%;\r\n\t\tmargin: auto;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t}\r\n\t.identifybox {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tmargin-top: 7px;\r\n\t}\r\n\t.iconstyle {\r\n\t\tcolor: #409EFF;\r\n\t}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}